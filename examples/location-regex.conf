# Example: Advanced Location Blocks and Regex
# Demonstrates various location matching patterns and regex usage

events {
    worker_connections 1024;
}

http {
    server {
        listen 80;
        server_name example.com;

        # Exact match
        location = / {
            return 200 "Homepage (exact match)";
        }

        # Prefix match with priority
        location ^~ /static/ {
            root /var/www;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Case-sensitive regex match
        location ~ \.php$ {
            fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
            fastcgi_index index.php;
            include fastcgi_params;
        }

        # Case-insensitive regex match for images
        location ~* \.(jpg|jpeg|png|gif|ico|svg)$ {
            root /var/www/images;
            expires 30d;
            add_header Cache-Control "public";
        }

        # Regex with capture groups - redirect old URLs
        location ~* ^/old/(\d+)/(.+)$ {
            return 301 /new/$1/$2;
        }

        # API versioning with regex
        location ~* ^/api/v(\d+)/(.*)$ {
            proxy_pass http://api-v$1.backend.com/$2$is_args$args;
            proxy_set_header Host api-v$1.backend.com;
        }

        # File extension handling
        location ~ \.(txt|xml)$ {
            add_header Content-Type text/plain;
            root /var/www/documents;
        }

        # Nested location with regex
        location /admin {
            location ~ \.php$ {
                # PHP files in admin directory
                auth_basic "Admin Area";
                auth_basic_user_file /etc/nginx/.htpasswd;
                fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
            }

            # Static files in admin
            location ~* \.(css|js)$ {
                root /var/www/admin;
                expires 1h;
            }
        }

        # Fallback prefix match
        location / {
            try_files $uri $uri/ /index.html;
        }
    }
}
