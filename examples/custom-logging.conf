# Example: Custom Log Format and Logging
# Demonstrates log_format directive and access logging

events {
    worker_connections 1024;
}

http {
    # Custom log format with detailed information
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';

    # JSON log format
    log_format json_combined escape=json
                            '{'
                                '"time_local":"$time_local",'
                                '"remote_addr":"$remote_addr",'
                                '"remote_user":"$remote_user",'
                                '"request":"$request",'
                                '"status": "$status",'
                                '"body_bytes_sent":"$body_bytes_sent",'
                                '"request_time":"$request_time",'
                                '"http_referrer":"$http_referer",'
                                '"http_user_agent":"$http_user_agent"'
                            '}';

    # Security-focused log format
    log_format security '$remote_addr [$time_local] "$request" '
                       '$status $body_bytes_sent '
                       '"$http_user_agent" "$http_x_forwarded_for"';

    server {
        listen 80;
        server_name example.com;

        # Use different log formats for different locations
        access_log /var/log/nginx/access.log detailed;
        error_log /var/log/nginx/error.log warn;

        location / {
            return 200 "Custom logging example";
        }

        location /api {
            access_log /var/log/nginx/api.log json_combined;
            return 200 "API with JSON logging";
        }

        location /admin {
            access_log /var/log/nginx/security.log security;
            return 200 "Admin with security logging";
        }

        location /health {
            access_log off;  # No logging for health checks
            return 200 "OK";
        }
    }
}
