# Example: Static File Serving and Performance
# Demonstrates static file handling and performance optimizations

events {
    worker_connections 1024;
}

http {
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    server {
        listen 80;
        server_name example.com;

        root /var/www/html;
        index index.html index.htm;

        # Static assets with long cache
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";

            # Enable CORS for fonts
            location ~* \.(woff|woff2|ttf|eot)$ {
                add_header Access-Control-Allow-Origin "*";
                expires 1y;
            }
        }

        # HTML files with shorter cache
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }

        # API responses - no cache
        location /api {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            proxy_pass http://backend;
        }

        # Download files
        location /downloads {
            alias /var/www/downloads;

            # Force download for certain file types
            location ~* \.(pdf|doc|docx|zip|tar\.gz)$ {
                add_header Content-Disposition "attachment";
            }
        }

        # Image optimization and serving
        location /images {
            alias /var/www/images;

            # Try WebP first, fallback to original
            location ~* \.(png|jpg|jpeg)$ {
                try_files $uri$webp_suffix $uri =404;
            }
        }

        # Security for sensitive files
        location ~* \.(htaccess|htpasswd|ini|log|sh|sql|conf)$ {
            deny all;
        }

        # Default location with try_files
        location / {
            try_files $uri $uri/ /index.html;

            # Security headers for HTML content
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-Content-Type-Options "nosniff";
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /404.html {
            internal;
        }

        location = /50x.html {
            internal;
        }
    }
}
