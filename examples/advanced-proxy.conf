# Example: Advanced Proxy Configuration
# Demonstrates comprehensive proxy settings and headers

events {
    worker_connections 1024;
}

http {
    upstream backend {
        server 192.168.1.100:8080;
        server 192.168.1.101:8080;
    }
    
    server {
        listen 80;
        server_name example.com;
        
        location / {
            # Basic proxy settings
            proxy_pass http://backend;
            
            # Proxy protocol version
            proxy_http_version 1.1;
            
            # Connection settings
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Error handling
            proxy_intercept_errors on;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 10s;
        }
        
        location /websocket {
            # WebSocket proxy configuration
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400s;
        }
        
        location /s3-proxy {
            # S3 proxy with custom headers
            set $bucket "my-bucket.s3.amazonaws.com";
            proxy_pass http://$bucket;
            proxy_set_header Host $bucket;
            proxy_set_header Authorization "";
            proxy_intercept_errors on;
            
            # Hide AWS headers
            proxy_hide_header x-amz-id-2;
            proxy_hide_header x-amz-request-id;
            proxy_hide_header x-amz-meta-server-side-encryption;
            proxy_hide_header Set-Cookie;
            proxy_ignore_headers Set-Cookie;
        }
        
        location /ssl-backend {
            # SSL backend proxy
            proxy_pass https://secure-backend.com;
            proxy_ssl_session_reuse off;
            proxy_ssl_server_name on;
            proxy_ssl_name "secure-backend.com";
            proxy_ssl_verify on;
            proxy_ssl_verify_depth 2;
            proxy_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
        }
    }
}
