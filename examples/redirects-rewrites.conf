# Example: Redirects and Rewrites
# Demonstrates various redirect and rewrite scenarios

events {
    worker_connections 1024;
}

http {
    server {
        listen 80;
        server_name example.com;
        
        # Simple redirect
        location = /old-page {
            return 301 /new-page;
        }
        
        # Redirect with query string preservation
        location = /legacy {
            return 301 /modern$is_args$args;
        }
        
        # Conditional redirects using regex
        location ~* ^/product/(\d+)/?$ {
            return 301 /products/$1;
        }
        
        # Multiple captures in redirect
        location ~* ^/blog/(\d{4})/(\d{2})/(.+)/?$ {
            return 301 /articles/$1-$2/$3;
        }
        
        # Redirect based on file extension
        location ~* ^(.+)\.htm$ {
            return 301 $1.html;
        }
        
        # Domain redirects
        location /external {
            return 302 https://external-site.com/path;
        }
        
        # Redirect with custom status codes
        location /maintenance {
            return 503;
        }
        
        location /gone {
            return 410;  # Gone permanently
        }
        
        # Complex rewrite with conditions
        location /shop {
            # Remove trailing slashes except for root
            rewrite ^/(.*)/$ /$1 permanent;
            
            # Rewrite product URLs
            rewrite ^/shop/product-(.+)$ /shop/products/$1 last;
            rewrite ^/shop/category-(.+)$ /shop/categories/$1 last;
        }
        
        # Internal rewrites (no redirect)
        location /api {
            rewrite ^/api/(.*)$ /v1/api/$1 break;
            proxy_pass http://backend;
        }
        
        # Trailing slash handling
        location ~* ^/admin([^.\?]*[^\/])$ {
            return 301 /admin$1/;
        }
        
        # AMP redirects (remove /amp suffix)
        location ~* ^(.+)\/amp(\/)?$ {
            return 301 $1;
        }
        
        # Mobile subdomain redirect
        location /m {
            return 301 https://mobile.example.com$request_uri;
        }
    }
}
